name: Docker image

on:
  push:
    branches: [ '**' ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ 'main' ]
  schedule:
    - cron: '0 5 * * *'

jobs:
  build_and_push:
    runs-on: ubuntu-20.04
    name: Create docker image

    steps:
    - uses: actions/checkout@v2

    - run: docker version
    - run: docker info
    - run: docker system df -v

    - uses: actions/cache@v2.1.4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - uses: crazy-max/ghaction-docker-meta@v1
      id: docker_meta
      with:
        images: |
          ghcr.io/asaaki/hello-world-docker-action
        tag-sha: true
        tag-edge: true
        tag-latest: true
        tag-semver: |
          {{version}}
          {{major}}.{{minor}}
          {{major}}
          v{{major}}

    - uses: docker/login-action@v1
      if: github.event_name != 'pull_request'
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_PAT }}

    - uses: docker/setup-buildx-action@v1
    - uses: docker/build-push-action@v2
      with:
        context: .
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  self_test:
    needs: [build_and_push]
    runs-on: ubuntu-20.04
    name: Self tests the hello world docker action

    steps:
    - uses: actions/checkout@v2
    - name: Hello world action step
      id: hello # for use in step below
      uses: ./.image
      with:
        greetee: "${{ secrets.HELLO_SECRET_NAME }}"
    - name: Get the output time
      run: echo "The time was ${{ steps.hello.outputs.time }}"
